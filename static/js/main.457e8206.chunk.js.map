{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","className","value","onChange","e","target","type","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","t","TodoList","filtered","i","App","useState","status","setFiltered","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.457e8206.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([...todos, \r\n            {text: inputText, completed: false, id: Math.random() * 1000}\r\n        ]);\r\n        setInputText('');\r\n    }\r\n    \r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"first-row\">\r\n                <input \r\n                    value={inputText} \r\n                    onChange={inputTextHandler} \r\n                    type=\"text\" \r\n                    className=\"todo-input\" \r\n                />\r\n                <button \r\n                    onClick={submitTodoHandler} \r\n                    className=\"todo-button\" \r\n                    type=\"submit\"\r\n                >\r\n                    <i className=\"fas fa-plus-circle\"></i>\r\n                </button>\r\n            </div>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","\r\nconst Todo = ({ todo, todos, setTodos }) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(t => \r\n            t.id !== todo.id\r\n        ));\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            return item.id === todo.id ? {...item, completed: !item.completed} : item;\r\n        }));\r\n    }\r\n    return (\r\n        <div className={`todo ${todo.completed ? \"completed\" : \"\"}`} >\r\n            <li className='todo-item'>{todo.text}</li>\r\n            <button onClick={completeHandler} className='complete-btn'><i className='fas fa-check'></i></button>\r\n            <button onClick={deleteHandler} className='delete-btn'><i className='fas fa-trash'></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\n\r\nconst TodoList = ({ todos, setTodos, filtered }) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filtered.map((todo, i) => {\r\n                    return <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos} />;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filtered, setFiltered] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch(status) {\n      case 'completed': \n        setFiltered(todos.filter(todo => todo.completed)); break;\n      case 'uncompleted':\n        setFiltered(todos.filter(todo => !todo.completed)); break;\n      default:\n        setFiltered(todos); break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') !== null) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form \n        todos={todos}\n        setTodos={setTodos} \n        inputText={inputText} \n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList setTodos={setTodos} todos={todos} filtered={filtered} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}